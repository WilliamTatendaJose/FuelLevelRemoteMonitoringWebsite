<RadzenText Text="Motor Current over time" TextStyle="Radzen.Blazor.TextStyle.H5" TagName="Radzen.Blazor.TagName.H4" class="mt-6" TextAlign="Radzen.TextAlign.Left"></RadzenText>

<div class="container">
    <div class="row">
        <div class="col-sm-12 my-5">
            <RadzenChart>
                <RadzenLineSeries Smooth="@smooth" Data="@currentData" CategoryProperty="Time" Title="Motor Current" LineType="LineType.Solid" ValueProperty="Current">
                    <RadzenMarkers Visible="@showMarkers" MarkerType="MarkerType.Square" />
                    <RadzenSeriesDataLabels Visible="@showDataLabels" />
                </RadzenLineSeries>
                <RadzenCategoryAxis Padding="20" Formatter="@FormatAsSeconds" />
                <RadzenValueAxis Formatter="@FormatAsCurrent">
                    <RadzenGridLines Visible="true" />
                    <RadzenAxisTitle Text="Current (Unit)" />
                </RadzenValueAxis>
            </RadzenChart>
        </div>
    </div>
</div>

@code {
    bool smooth = true;
    bool showDataLabels = false;
    bool showMarkers = false;
    int dataPoints = 100; // Number of data points to generate

    class CurrentData
    {
        public double Time { get; set; } // Replace with actual time unit based on data source
        public double Current { get; set; }
    }

    string FormatAsSeconds(object value)
    {
        return ((double)value).ToString("0.00 s"); // Adjust format as needed
    }

    string FormatAsCurrent(object value)
    {
        return ((double)value).ToString("0.00 A"); // Example format (replace V with your unit)
    }

    CurrentData[] currentData = new CurrentData[0]; // Initialize empty array

    protected override void OnInitialized()
    {
        GenerateRandomCurrentData();
    }

    void GenerateRandomCurrentData()
    {
        Random random = new Random();
        currentData = new CurrentData[dataPoints];
        for (int i = 0; i < dataPoints; i++)
        {
            double baseCurrent = 5.0; // Base current (5V)
            double deviation = random.NextDouble() * 2 - 0.5; // Random deviation between -1.5 AND+1.5
            double current = baseCurrent + deviation;

            currentData[i] = new CurrentData
                {
                    Time = i, // Replace with actual time values if needed
                    Current = current
                };
        }
    }
}
